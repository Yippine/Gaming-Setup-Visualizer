---
description: 
globs: 
alwaysApply: true
---
# 🚀 專案動態進度追蹤器

> **[META] 注意：** 作為 AI 協作者，我必須在每次與使用者互動後，審視並更新此檔案，以確保計畫永遠反映最新的對話進度和決策。

## 🎯 總體目標
為 IKEA FREDDE 電競桌，打造一個**可擴展的、資料驅動的燈光佈置系統**。該系統允許使用者透過簡單的設定，自由組合、預覽多種 VATTENSTEN LED 燈條的佈置方案，最終實現一個**可互動、支援多種動態 RGB 特效的 3D 視覺化平台**。

---

## 🗺️ 專案執行計畫 (Phased Plan)

### **第一階段：基礎設施重構 - 燈光位置標準化**
- **目標**: 將燈光佈置從「硬編碼」轉變為「資料驅動」。建立一個包含所有潛在燈光位置的標準化「字典」，作為整個系統的基石。
- **產出**:
    - `js/lighting-positions.js`: 一個新的模組，用以定義所有可用的燈光位置 (包含 ID、描述、位置、旋轉、長度等幾何參數)。
    - 重構後的 `js/lighting.js`: 具備一個核心函式 `generateLightsFromIDs(scene, ids)`，能夠根據傳入的位置 ID 陣列，動態生成燈光。
- **待辦事項**:
    - [ ] 建立 `js/lighting-positions.js` 檔案。
    - [ ] 在 `lighting-positions.js` 中，定義並導出至少 10-12 個橫向與縱向的標準化燈光位置。
    - [ ] 重構 `js/lighting.js`，移除 `applyImmersiveLights`，改為實現 `generateLightsFromIDs` 函式。

### **第二階段：動態方案生成與 UI 互動**
- **目標**: 建立多個燈光方案「設定檔」，並打造一個全新的 UI 來動態載入和預覽這些方案。
- **產出**:
    - `js/lighting-schemes.js`: 一個新的模組，用以定義多個燈光方案。每個方案都是一個包含位置 ID 的簡單陣列 (例如 `export const immersiveScheme = [1, 2, 8, 9];`)。
    - 重構後的 `js/ui.js`: 能夠動態讀取 `lighting-schemes.js` 中的方案，並為每個方案生成一個預覽按鈕。
    - 重構後的 `js/main.js`: 更新其邏輯，以支援新 UI 的互動。
- **待辦事項**:
    - [ ] 建立 `js/lighting-schemes.js` 檔案，並預設 2-3 個不同的燈光方案。
    - [ ] 重構 `js/ui.js`，移除舊的按鈕，改為動態生成方案按鈕。
    - [ ] 在 `js/main.js` 中，設定一個預設載入的燈光方案。

### **第三階段：對稱性規則與最終化**
- **目標**: 為系統加入美學規則（如對稱性），並清理專案中所有廢棄的檔案。
- **產出**: 完善且乾淨的最終版專案。
- **待辦事項**:
    - [ ] (可選) 在 `lighting.js` 或 `ui.js` 中加入邏輯，以檢查並強制垂直燈條的對稱性。
    - [ ] 刪除 `immersive-atmosphere-plan.md` 等不再需要的檔案。
    - [ ] 最終審查與程式碼註解。

---

## 📈 目前進度狀態

- **當前階段**: **第一階段：基礎設施重構 - 燈光位置標準化**
- **已完成 (Done)**:
    - [x] **原型驗證階段**
        - [x] 建立高擬真 FREDDE 書桌 3D 模型。
        - [x] 實現動態 RGB 光效。
        - [x] 成功修復所有渲染及視覺 Bug。
        - [x] 將程式碼重構為模組化結構。
        - [x] 將所有變更合併至 `main` 分支。
- **下一步 (Next Up)**:
    - [ ] **建立燈光位置字典**
        - [ ] 建立 `js/lighting-positions.js` 檔案，並定義所有可用的燈光位置。

---

## 📝 關鍵決策日誌 (Decision Log)

- **2024-06-16**: **重大策略轉向**。使用者提出，將專案從「逐個建立方案」轉變為「建立一個資料驅動的、可擴展的燈光佈置系統」。此決策將大幅提升專案的靈活性與未來潛力。舊的開發計畫被歸檔，啟用此新版三階段計畫。
- **2024-XX-XX**: 使用者提出燈光動態化需求。決定新增「第四階段」，優先實現動態 RGB 特效、優化燈條長度並修復模型遮擋問題。原定的程式碼重構任務延後，待視覺效果完全達標後再進行。
- **2024-XX-XX**: 為了支援未來多種燈光方案的切換，決定重構程式碼，將基礎場景與燈光方案分離，並為此建立 UI 按鈕。